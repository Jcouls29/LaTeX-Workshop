{
  "name": "zed-workshop",
  "displayName": "Z-Notation Workshop",
  "description": "Boost Z-Notation typesetting efficiency with preview, compile, autocomplete, colorize, and more.",
  "icon": "icon.png",
  "version": "1.0.0",
  "publisher": "SparcPoint",
  "license": "MIT",
  "homepage": "https://github.com/Jcouls29/Zed-Workshop",
  "repository": {
    "type": "git",
    "url": "https://github.com/Jcouls29/Zed-Workshop.git"
  },
  "engines": {
    "vscode": "^1.13.0"
  },
  "categories": [
    "Languages",
    "Snippets"
  ],
  "keywords": [
    "compile",
    "preview",
    "z",
    "z-notation",
    "z-specification"
  ],
  "activationEvents": [
    "onLanguage:z"
  ],
  "main": "./out/src/main",
  "contributes": {
    "languages": [
      {
        "id": "z",
        "aliases": [
          "zed",
          "Zed"
        ],
        "extensions": [
          ".zed"
        ],
        "configuration": "./syntax/syntax.json"
      },
      {
        "id": "latex-log",
        "aliases": [
          "LaTeX Log"
        ],
        "extensions": [
          ".log"
        ]
      }
    ],
    "grammars": [
      {
        "language": "z",
        "scopeName": "text.z",
        "path": "./syntax/LaTeX.plist"
      }
    ],
    "commands": [
      {
        "command": "zed-workshop.build",
        "title": "Build Zed project",
        "category": "Zed Workshop"
      },
      {
        "command": "zed-workshop.view",
        "title": "View PDF file in web page",
        "category": "Zed Workshop"
      },
      {
        "command": "zed-workshop.clean",
        "title": "Clean up auxiliary files",
        "category": "Zed Workshop"
      }
    ],
    "keybindings": [
      {
        "command": "zed-workshop.build",
        "key": "ctrl+alt+b",
        "when": "editorFocus && !replaceActive && !searchViewletVisible && !findWidgetVisible"
      },
      {
        "command": "zed-workshop.view",
        "key": "ctrl+alt+v",
        "when": "editorFocus && !replaceActive && !searchViewletVisible && !findWidgetVisible"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Zed Workshop configuration",
      "properties": {
        "zed-workshop.zed.toolchain": {
          "type": "array",
          "default": [
            {
              "command": "latexmk",
              "args": [
                "-interaction=nonstopmode",
                "-file-line-error",
                "-pdf",
                "%DOC%"
              ]
            },
            {
              "command": "latexmk",
              "args":[
                "-c",
                "%DOC%"
              ]
            }
          ],
          "description": "LaTeX toolchain to build project.\nThis property defines the sequence of commands LaTeX Workshop will execute to build the LaTeX project. By default it tries latexmk to compile to PDF.\nPlaceholder %DOC% is used to represent the root LaTeX file name (without '.tex' extension), and will be replaced when executing.\n For a detailed explanation on how to customize your toolchain, please visit https://github.com/James-Yu/LaTeX-Workshop#toolchain."
        },
        "zed-workshop.zed.outputDir": {
          "type": "string",
          "default": "./",
          "description": "The directory where output files (e.g., PDF and SyncTeX files) are located.\nBoth relative and absolute pathes are supported. Relative path start from the root file location, so be ware if it is located in sub-directory."
        },
        "zed-workshop.zed.autoBuild.onSave.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Build LaTeX after saving Zed source file.\nThis property defines whether LaTeX Workshop will execute the LaTeX toolchain command(s) to build the project after new LaTeX contents are saved."
        },
        "zed-workshop.zed.autoBuild.onTexChange.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Build LaTeX after a Zed source file has changed in the workspace.\nThis property defines whether LaTeX Workshop will execute the LaTeX toolchain command(s) to build the project after any LaTeX file in the workspace is saved on the disk which is not open in the active editor window."
        },
        "zed-workshop.zed.clean.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Delete Zed auxillary files after building project.\nThis property defines whether LaTeX Workshop will clean up all unnecessary files after building the project."
        },
        "zed-workshop.view.pdf.zoom": {
          "type": "string",
          "default": "auto",
          "description": "The default zoom level of the PDF viewer.\nThis default value will be passed to the viewer upon opening. Possible values are `auto`, `page-actual`, `page-fit`, `page-width`, and one-based scale values (e.g., 0.5 for 50%, 2.0 for 200%)."
        },
        "zed-workshop.view.pdf.hand": {
          "type": "boolean",
          "default": false,
          "description": "Define if the hand tool is enabled by default in the PDF viewer."
        },
        "zed-workshop.chktex.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable linting LaTeX with ChkTeX.\nThe active document will be linted when no document changes for a defined period of time.\nThe full project will be linted from the root on file save."
        },
        "zed-workshop.chktex.path": {
          "type": "string",
          "default": "chktex",
          "description": "Define the location of ChkTeX executive file.\nThis command will be joint with `latex-workshop.linter_arguments_*` and required arguments to form a complete command of ChkTeX."
        },
        "zed-workshop.chktex.args.active": {
          "type": "array",
          "default": [
            "-wall",
            "-n22",
            "-n30",
            "-e16",
            "-q"
          ],
          "description": "Linter arguments to check LaTeX syntax of the current file state in real time with ChkTeX.\nArguments must be in separate strings in the array. Additional arguments, i.e., `-I0 -f%f:%l:%c:%d:%k:%n:%m\\n` will be appended when constructing the command. Current file contents will be piped to the command through stdin."
        },
        "zed-workshop.chktex.args.root": {
          "type": "array",
          "default": [
            "-wall",
            "-n22",
            "-n30",
            "-e16",
            "-q"
          ],
          "description": "Linter arguments to check LaTeX syntax of the entire project from the root file with ChkTeX.\nArguments must be in separate strings in the array. Additional arguments, i.e., `-f%f:%l:%c:%d:%k:%n:%m\\n %DOC%` will be appended when constructing the command."
        },
        "zed-workshop.chktex.interval": {
          "type": "number",
          "default": 300,
          "description": "Defines the time interval in milliseconds between invoking LaTeX linter on the active file."
        },
        "zed-workshop.debug.showLog": {
          "type": "boolean",
          "default": true,
          "description": "Display LaTeX Workshop debug log in output panel.\nThis property defines whether LaTeX Workshop will output its debug log to the log panel."
        }
      }
    },
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == z",
          "command": "zed-workshop.build",
          "group": "navigation@100"
        },
        {
          "when": "resourceLangId == z",
          "command": "zed-workshop.view",
          "group": "navigation@101"
        },
        {
          "when": "resourceLangId == z",
          "command": "zed-workshop.clean",
          "group": "navigation@102"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "zed-outline",
          "name": "Zed Outline",
          "when": "resourceLangId == z"
        }
      ]
    },
    "snippets": [
      {
        "language": "z",
        "path": "./data/z-snippets.json"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install"
  },
  "capabilities": {
    "completionProvider": {
      "resolveProvider": "true"
    }
  },
  "dependencies": {
    "chokidar": "^1.6.1",
    "glob": "^7.1.1",
    "opn": "^5.1.0",
    "ws": "^1.1.1"
  },
  "devDependencies": {
    "@types/chokidar": "^1.6.0",
    "@types/glob": "^5.0.30",
    "@types/node": "^6.0.40",
    "@types/ws": "^0.0.39",
    "tslint": "^5.0.0",
    "typescript": "^2.0.3",
    "vscode": "^1.0.0"
  }
}
